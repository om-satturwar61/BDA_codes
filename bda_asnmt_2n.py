# -*- coding: utf-8 -*-
"""BDA-Asnmt-2N.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o6wMERF595I5r7n65CLsUJrZwmRrWO4r
"""

import pandas as pd
import matplotlib.pyplot as plt

import numpy as np

data = pd.read_csv('column_2C_weka.csv')
data.head(5)

df = data.iloc[:, [5, 4]]
df.head(5)

from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters = 2)
kmeans.fit(df)

lbls = kmeans.predict(df)

plt.scatter(df['pelvic_radius'], df['degree_spondylolisthesis'], c = lbls)
plt.xlabel('pelvic_radius')
plt.ylabel('degree_spondylolisthesis')
plt.show()

df1 = pd.DataFrame({'labels': lbls, 'class':data['class']})
crtb = pd.crosstab(df1['labels'], df1['class'])
crtb

inertia_list = np.empty(9)
for i in range(1, 9):
    kmeans = KMeans(n_clusters = i)
    kmeans.fit(df)
    inertia_list[i] = kmeans.inertia_

plt.plot(range(0, 9), inertia_list, '-o')
plt.xlabel('Number of cluster')
plt.ylabel('Inertia')
plt.show()

data_2 = pd.read_csv('column_2C_weka.csv')
data_2.head()

data_3 = data_2.drop('class', axis = 1)

from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import make_pipeline

sc = StandardScaler()
kmeans = KMeans(n_clusters = 2)
pipe = make_pipeline(sc, kmeans)
pipe.fit(data_3)
lbls_2 = pipe.predict(data_3)

df3 = pd.DataFrame({'labels' : lbls_2, 'class' : data_2['class']})
ct3 = pd.crosstab(df3['labels'], df3['class'])

ct3

from scipy.cluster.hierarchy import linkage, dendrogram
merg = linkage(data_3.iloc[200 : 220, : ], method = 'single')
dendrogram(merg, leaf_rotation = 90, leaf_font_size = 6)
plt.show()